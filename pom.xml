<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.lauriewired</groupId>
  <artifactId>GhidraMCP</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>GhidraMCP</name>
  <url>http://maven.apache.org</url>
  
  <properties>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <!-- Ghidra JARs as system-scoped dependencies -->
    <dependency>
      <groupId>ghidra</groupId>
      <artifactId>Generic</artifactId>
      <version>11.3.1</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/lib/Generic.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>ghidra</groupId>
      <artifactId>SoftwareModeling</artifactId>
      <version>11.3.1</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/lib/SoftwareModeling.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>ghidra</groupId>
      <artifactId>Project</artifactId>
      <version>11.3.1</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/lib/Project.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>ghidra</groupId>
      <artifactId>Docking</artifactId>
      <version>11.3.1</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/lib/Docking.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>ghidra</groupId>
      <artifactId>Decompiler</artifactId>
      <version>11.3.1</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/lib/Decompiler.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>ghidra</groupId>
      <artifactId>Utility</artifactId>
      <version>11.3.1</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/lib/Utility.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>ghidra</groupId>
      <artifactId>Base</artifactId>
      <version>11.3.1</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/lib/Base.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>ghidra</groupId>
      <artifactId>Gui</artifactId>
      <version>11.3.1</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/lib/Gui.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>ghidra</groupId>
      <artifactId>DB</artifactId>
      <version>11.3.1</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/lib/DB.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>ghidra</groupId>
      <artifactId>FileSystem</artifactId>
      <version>11.3.1</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/lib/FileSystem.jar</systemPath>
    </dependency>

    <!-- Apache Commons Text for JSON escaping -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>1.10.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.12.0</version>
    </dependency>

    <!-- JUnit 5 dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.9.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.9.2</version>
      <scope>test</scope>
    </dependency>
    
    <!-- Mockito for mocking in tests -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>5.1.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>5.1.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Use custom MANIFEST.MF -->
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.2</version>
        <configuration>
          <archive>
            <manifestFile>src/main/resources/META-INF/MANIFEST.MF</manifestFile>
          </archive>
          <!-- Set a fixed name for the JAR without version -->
          <finalName>GhidraMCP</finalName>
          <!-- Exclude the App class -->
          <excludes>
            <exclude>**/App.class</exclude>
          </excludes>
          <!-- Make sure output directory is target for consistency -->
          <outputDirectory>${project.build.directory}</outputDirectory>
        </configuration>
      </plugin>
      
      <!-- The Assembly Plugin for creating the Ghidra extension ZIP -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <!-- Using the custom assembly descriptor -->
          <descriptors>
            <descriptor>src/assembly/ghidra-extension.xml</descriptor>
          </descriptors>
          
          <!-- The name of the final zip -->
          <finalName>GhidraMCP-${project.version}</finalName>
          
          <!-- Don't append the assembly ID -->
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
        
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- Copy dependencies to target/lib for the assembly -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.2</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <!-- JaCoCo plugin for code coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.13</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- Maven Surefire Plugin for running tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <argLine>
            @{argLine}
            -XX:+EnableDynamicAgentLoading
            -Dnet.bytebuddy.experimental=true
            --add-opens java.base/java.lang=ALL-UNNAMED
            --add-opens java.base/java.util=ALL-UNNAMED
          </argLine>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
